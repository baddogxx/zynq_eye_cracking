
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include "xil_types.h"
#include "xil_cache.h"
#include "xparameters.h"
#include "xaxivdma.h"
#include "xaxivdma_i.h"
#include "display_ctrl_hdmi/display_ctrl.h"
#include "vdma_api/vdma_api.h"
#include "emio_sccb_cfg/emio_sccb_cfg.h"
#include "ov5640/ov5640_init.h"

#include "xgpiops.h"
#include "sleep.h"

//宏定义
#define DYNCLK_BASEADDR  XPAR_AXI_DYNCLK_0_BASEADDR  //动态时钟基地址
#define VDMA_ID          XPAR_AXIVDMA_0_DEVICE_ID    //VDMA器件ID
#define DISP_VTC_ID      XPAR_VTC_0_DEVICE_ID        //VTC器件ID

//全局变量
//frame buffer的起始地址
unsigned int const frame_buffer_addr = (XPAR_PS7_DDR_0_S_AXI_BASEADDR
										+ 0x1000000);
XAxiVdma     vdma;
DisplayCtrl  dispCtrl;
VideoMode    vd_mode;

#define LED_DEVICE_ID XPAR_XGPIOPS_0_DEVICE_ID
XGpioPs Gpio;


int main(void)
{

//		xil_printf("Im'fine\r\n");
//		u32 status;
//		u16 cmos_h_pixel;                    //ov5640 DVP 输出水平像素点数
//		u16 cmos_v_pixel;                    //ov5640 DVP 输出垂直像素点数
//		u16 total_h_pixel;                   //ov5640 水平总像素大小
//		u16 total_v_pixel;                   //ov5640 垂直总像素大小
//
//		cmos_h_pixel = 1280;                 //设置OV5640输出分辨率为1280*720
//		cmos_v_pixel = 720;
//		total_h_pixel = 2570;
//		total_v_pixel = 980;
//
//		emio_init();                         //初始化EMIO
//		status = ov5640_init( cmos_h_pixel,  //初始化ov5640
//							  cmos_v_pixel,
//							 total_h_pixel,
//							 total_v_pixel);
//		if(status == 0)
//			xil_printf("OV5640 detected successful!\r\n");
//		else
//			xil_printf("OV5640 detected failed!\r\n");
//
//		vd_mode = VMODE_1280x720;
//
//		//配置VDMA
//		run_vdma_frame_buffer(&vdma, VDMA_ID, vd_mode.width, vd_mode.height,
//								frame_buffer_addr,0,0,BOTH);
//	    //初始化Display controller
//		DisplayInitialize(&dispCtrl, DISP_VTC_ID, DYNCLK_BASEADDR);
//	    //设置VideoMode
//		DisplaySetMode(&dispCtrl, &vd_mode);
//		DisplayStart(&dispCtrl);














	//debug用
	xil_printf("Im'ok\r\n");
	int Status;
		XGpioPs_Config *ConfigPtr;

		/* Initialize the GPIO driver. */
		ConfigPtr = XGpioPs_LookupConfig(LED_DEVICE_ID);
		Status = XGpioPs_CfgInitialize(&Gpio, ConfigPtr,
							ConfigPtr->BaseAddr);
			if (Status != XST_SUCCESS) {
				return XST_FAILURE;
			}
		XGpioPs_SetDirectionPin(&Gpio, 56, 1);		//	设置引脚输出方向为 output
		XGpioPs_SetOutputEnablePin(&Gpio, 56, 1);	//	输出使能
		while(1){
				xil_printf("PWM_IP Test!\n");
				XGpioPs_WritePin(&Gpio, 56, 0x1);			//	点亮led
				sleep(1);
				XGpioPs_WritePin(&Gpio, 56, 0x0);			//	点亮led
				sleep(1);
			}








    return 0;
}

